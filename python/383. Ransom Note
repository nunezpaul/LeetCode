'''
Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true
'''

class Solution(object):
    def canConstruct(self, ransomNote, magazine):
        """
        :type ransomNote: str
        :type magazine: str
        :rtype: bool
        """
        #A = ransomNote
        #B = magazine
        
        setA = set(ransomNote)
        setB = set(magazine)
        
        #Are all the letters present in the magazine to make a ransomNote?
        if (setA.intersection(setB) != setA):
            #if no then proceed no further
            return False
        else:
            #create empty dictionary to populate with how many letters we have available
            table =  {}
            #fill dictionary with the letters we have available 
            for i in setB: table[i] = 0
            for i in list(magazine): table[i] += 1 #fill how many letters we have available
            for i in list(ransomNote):
                    table[i] -=1
                    if table[i] < 0:
                        return( False )
            return( True )
        
#faster than 88% of all submissions
