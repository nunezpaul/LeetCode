'''
You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn't have "lakes" (water inside that isn't connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.

Example:
[[0,1,0,0],
 [1,1,1,0],
 [0,1,0,0],
 [1,1,0,0]]

Answer: 16
'''

class Solution(object):
    def islandPerimeter(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        count = 0
        A = grid
 
        for i,A_i in enumerate(A):
            for j,A_i_j in enumerate(A_i):
                if A_i_j == 1:
                    #check the x position
                    if j == 0 or j == len(A_i)-1:
                        #check if out of bounds or if in bounds
                        if j-1 < 0:
                            count+=1
                        elif A_i[j-1] ==0 :
                            count+=1

                        try:
                            if A_i[j+1] == 0:
                                count+=1
                        except:
                            #out of bounds then guaranteed edge
                            count+=1   

                    elif A_i[j-1] == 0 == A_i[j+1] == 0:
                        #If both sides of the 1 have a 0 then add 2
                        count+=2
                    elif A_i[j-1] == 0 or A_i[j+1] == 0:
                        #if only 1 side of the 1 has a 0 then add 1
                        count+=1

                    #check the y position
                    if i == 0 or i == len(A)-1:
                        #If an edge add 1
                        if i-1 < 0:
                            count+=1
                        elif A[i-1][j] == 0:
                            count+=1

                        try:
                            if A[i+1][j] == 0:
                                count+=1
                        except:
                            #out of bounds then guaranteed edge
                            count+=1

                    elif A[i-1][j] == 0 == A[i+1][j] == 0:
                        #If both sides of the 1 have a 0 then add 2
                        count+=2
                    elif A[i-1][j] == 0 or A[i+1][j] == 0:
                        #if only 1 side of the 1 has a 0 then add 1
                        count+=1
        
        return count
