'''
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.
'''

class Solution(object):
    def hammingDistance(self, x, y):
        """
        :type x: int
        :type y: int
        :rtype: int
        """
        #convert to binary
        binx = bin(x)[2:]
        biny = bin(y)[2:]
        
        #fill in necessary leading zeros
        if len(binx) > len(biny):
            biny = biny.zfill(len(binx))
        else:
            binx = binx.zfill(len(biny))
        
        #check what's the difference between bits
        out = map(self.check, binx, biny)
        
        #sum the differences and return the total
        return sum(out)
    
    def check(self, bitx, bity):
        return bitx != bity

#runtime is faster than 86% of all python submissions
